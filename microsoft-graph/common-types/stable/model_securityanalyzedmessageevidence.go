package stable

import (
	"encoding/json"
	"fmt"

	"github.com/hashicorp/go-azure-sdk/sdk/nullable"
)

// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

var _ SecurityAlertEvidence = SecurityAnalyzedMessageEvidence{}

type SecurityAnalyzedMessageEvidence struct {
	// Direction of the email relative to your network. The possible values are: inbound, outbound or intraorg.
	AntiSpamDirection nullable.Type[string] `json:"antiSpamDirection,omitempty"`

	// Number of attachments in the email.
	AttachmentsCount nullable.Type[int64] `json:"attachmentsCount,omitempty"`

	// Delivery action of the email. The possible values are: delivered, deliveredAsSpam, junked, blocked, or replaced.
	DeliveryAction nullable.Type[string] `json:"deliveryAction,omitempty"`

	// Location where the email was delivered. The possible values are: inbox, external, junkFolder, quarantine, failed,
	// dropped, deletedFolder or forwarded.
	DeliveryLocation nullable.Type[string] `json:"deliveryLocation,omitempty"`

	// Public-facing identifier for the email that is set by the sending email system.
	InternetMessageId nullable.Type[string] `json:"internetMessageId,omitempty"`

	// Detected language of the email content.
	Language nullable.Type[string] `json:"language,omitempty"`

	// Unique identifier for the email, generated by Microsoft 365.
	NetworkMessageId nullable.Type[string] `json:"networkMessageId,omitempty"`

	// The P1 sender.
	P1Sender *SecurityEmailSender `json:"p1Sender,omitempty"`

	// The P2 sender.
	P2Sender *SecurityEmailSender `json:"p2Sender,omitempty"`

	// Date and time when the email was received.
	ReceivedDateTime nullable.Type[string] `json:"receivedDateTime,omitempty"`

	// Email address of the recipient, or email address of the recipient after distribution list expansion.
	RecipientEmailAddress nullable.Type[string] `json:"recipientEmailAddress,omitempty"`

	// IP address of the last detected mail server that relayed the message.
	SenderIp nullable.Type[string] `json:"senderIp,omitempty"`

	// Subject of the email.
	Subject nullable.Type[string] `json:"subject,omitempty"`

	// Collection of methods used to detect malware, phishing, or other threats found in the email.
	ThreatDetectionMethods *[]string `json:"threatDetectionMethods,omitempty"`

	// Collection of detection names for malware or other threats found.
	Threats *[]string `json:"threats,omitempty"`

	// Number of embedded URLs in the email.
	UrlCount nullable.Type[int64] `json:"urlCount,omitempty"`

	// Collection of the URLs contained in this email.
	Urls *[]string `json:"urls,omitempty"`

	// Uniform resource name (URN) of the automated investigation where the cluster was identified.
	Urn nullable.Type[string] `json:"urn,omitempty"`

	// Fields inherited from SecurityAlertEvidence

	// The date and time when the evidence was created and added to the alert. The Timestamp type represents date and time
	// information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is
	// 2014-01-01T00:00:00Z.
	CreatedDateTime *string `json:"createdDateTime,omitempty"`

	// Detailed description of the entity role/s in an alert. Values are free-form.
	DetailedRoles *[]string `json:"detailedRoles,omitempty"`

	// The OData ID of this entity
	ODataId *string `json:"@odata.id,omitempty"`

	// The OData Type of this entity
	ODataType *string `json:"@odata.type,omitempty"`

	RemediationStatus *SecurityEvidenceRemediationStatus `json:"remediationStatus,omitempty"`

	// Details about the remediation status.
	RemediationStatusDetails nullable.Type[string] `json:"remediationStatusDetails,omitempty"`

	// The role/s that an evidence entity represents in an alert, for example, an IP address that is associated with an
	// attacker has the evidence role Attacker.
	Roles *[]SecurityEvidenceRole `json:"roles,omitempty"`

	// Array of custom tags associated with an evidence instance, for example, to denote a group of devices, high-value
	// assets, etc.
	Tags *[]string `json:"tags,omitempty"`

	Verdict *SecurityEvidenceVerdict `json:"verdict,omitempty"`
}

func (s SecurityAnalyzedMessageEvidence) SecurityAlertEvidence() BaseSecurityAlertEvidenceImpl {
	return BaseSecurityAlertEvidenceImpl{
		CreatedDateTime:          s.CreatedDateTime,
		DetailedRoles:            s.DetailedRoles,
		ODataId:                  s.ODataId,
		ODataType:                s.ODataType,
		RemediationStatus:        s.RemediationStatus,
		RemediationStatusDetails: s.RemediationStatusDetails,
		Roles:                    s.Roles,
		Tags:                     s.Tags,
		Verdict:                  s.Verdict,
	}
}

var _ json.Marshaler = SecurityAnalyzedMessageEvidence{}

func (s SecurityAnalyzedMessageEvidence) MarshalJSON() ([]byte, error) {
	type wrapper SecurityAnalyzedMessageEvidence
	wrapped := wrapper(s)
	encoded, err := json.Marshal(wrapped)
	if err != nil {
		return nil, fmt.Errorf("marshaling SecurityAnalyzedMessageEvidence: %+v", err)
	}

	var decoded map[string]interface{}
	if err = json.Unmarshal(encoded, &decoded); err != nil {
		return nil, fmt.Errorf("unmarshaling SecurityAnalyzedMessageEvidence: %+v", err)
	}

	decoded["@odata.type"] = "#microsoft.graph.security.analyzedMessageEvidence"

	encoded, err = json.Marshal(decoded)
	if err != nil {
		return nil, fmt.Errorf("re-marshaling SecurityAnalyzedMessageEvidence: %+v", err)
	}

	return encoded, nil
}
