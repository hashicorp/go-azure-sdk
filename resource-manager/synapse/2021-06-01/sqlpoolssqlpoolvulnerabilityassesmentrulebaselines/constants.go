package sqlpoolssqlpoolvulnerabilityassesmentrulebaselines

import "strings"

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

type VulnerabilityAssessmentPolicyBaselineName string

const (
	VulnerabilityAssessmentPolicyBaselineNameDefault VulnerabilityAssessmentPolicyBaselineName = "default"
	VulnerabilityAssessmentPolicyBaselineNameMaster  VulnerabilityAssessmentPolicyBaselineName = "master"
)

func PossibleValuesForVulnerabilityAssessmentPolicyBaselineName() []string {
	return []string{
		string(VulnerabilityAssessmentPolicyBaselineNameDefault),
		string(VulnerabilityAssessmentPolicyBaselineNameMaster),
	}
}

func parseVulnerabilityAssessmentPolicyBaselineName(input string) (*VulnerabilityAssessmentPolicyBaselineName, error) {
	vals := map[string]VulnerabilityAssessmentPolicyBaselineName{
		"default": VulnerabilityAssessmentPolicyBaselineNameDefault,
		"master":  VulnerabilityAssessmentPolicyBaselineNameMaster,
	}
	if v, ok := vals[strings.ToLower(input)]; ok {
		return &v, nil
	}

	// otherwise presume it's an undefined value and best-effort it
	out := VulnerabilityAssessmentPolicyBaselineName(input)
	return &out, nil
}
